{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Desktop\\\\hindustan-daily\\\\pages\\\\news\\\\[slug].js\",\n    _this = this;\n\nimport React from 'react';\nimport Head from 'next/head';\nimport Article from '../../components/article';\nimport Layout from '../../components/Layout';\n\nvar Post = function Post(props) {\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.post.fields.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"title\",\n        content: \"\".concat(props.post.fields.title, \" | from Hindustan Daily\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"keywords\",\n        content: \"\".concat(props.post.fields.title, \", by Hindustan Daily\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Article on \".concat(props.post.fields.title, \" | by Hindustan Daily\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:url\",\n        content: \"https://hindustandaily.com/news/\".concat(props.post.fields.urlPath)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:type\",\n        content: \"website\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:title\",\n        content: props.post.fields.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:description\",\n        content: \"read on Hindustan Daily\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:image\",\n        content: props.post.fields.image.fields.file.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Article, {\n        date: props.post.fields.date,\n        image: props.post.fields.image.fields,\n        title: props.post.fields.title,\n        url: props.post.fields.urlPath,\n        body: props.post.fields.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Post;\nexport var __N_SSG = true;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/HOME/Desktop/hindustan-daily/pages/news/[slug].js"],"names":["React","Head","Article","Layout","Post","props","post","fields","title","urlPath","image","file","url","date","body"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK,EAAG;AAEnB,sBACE,QAAC,MAAD;AAAA,4BACA,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,KAAK,CAACC,IAAN,CAAWC,MAAX,CAAkBC;AAA1B;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAM,QAAA,IAAI,EAAC,OAAX;AAAmB,QAAA,OAAO,YAAKH,KAAK,CAACC,IAAN,CAAWC,MAAX,CAAkBC,KAAvB;AAA1B;AAAA;AAAA;AAAA;AAAA,eAFF,eAGE;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,YAAKH,KAAK,CAACC,IAAN,CAAWC,MAAX,CAAkBC,KAAvB;AAA7B;AAAA;AAAA;AAAA;AAAA,eAHF,eAIE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,uBAAgBH,KAAK,CAACC,IAAN,CAAWC,MAAX,CAAkBC,KAAlC;AAAhC;AAAA;AAAA;AAAA;AAAA,eAJF,eAKE;AAAM,QAAA,QAAQ,EAAC,QAAf;AAAkC,QAAA,OAAO,4CAAqCH,KAAK,CAACC,IAAN,CAAWC,MAAX,CAAkBE,OAAvD;AAAzC;AAAA;AAAA;AAAA;AAAA,eALF,eAME;AAAM,QAAA,QAAQ,EAAC,SAAf;AAAkC,QAAA,OAAO,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,eANF,eAOE;AAAM,QAAA,QAAQ,EAAC,UAAf;AAAkC,QAAA,OAAO,EAAEJ,KAAK,CAACC,IAAN,CAAWC,MAAX,CAAkBC;AAA7D;AAAA;AAAA;AAAA;AAAA,eAPF,eAQE;AAAM,QAAA,QAAQ,EAAC,gBAAf;AAAkC,QAAA,OAAO,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,eARF,eASE;AAAM,QAAA,QAAQ,EAAC,UAAf;AAAkC,QAAA,OAAO,EAAEH,KAAK,CAACC,IAAN,CAAWC,MAAX,CAAkBG,KAAlB,CAAwBH,MAAxB,CAA+BI,IAA/B,CAAoCC;AAA/E;AAAA;AAAA;AAAA;AAAA,eATF;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,eAYA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE,QAAC,OAAD;AACE,QAAA,IAAI,EAAEP,KAAK,CAACC,IAAN,CAAWC,MAAX,CAAkBM,IAD1B;AAEE,QAAA,KAAK,EAAER,KAAK,CAACC,IAAN,CAAWC,MAAX,CAAkBG,KAAlB,CAAwBH,MAFjC;AAGE,QAAA,KAAK,EAAEF,KAAK,CAACC,IAAN,CAAWC,MAAX,CAAkBC,KAH3B;AAIE,QAAA,GAAG,EAAEH,KAAK,CAACC,IAAN,CAAWC,MAAX,CAAkBE,OAJzB;AAKE,QAAA,IAAI,EAAEJ,KAAK,CAACC,IAAN,CAAWC,MAAX,CAAkBO;AAL1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAZA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAwBD,CA1BD;;KAAMV,I;;AAoFN,eAAeA,IAAf","sourcesContent":["import React from 'react'\r\nimport Head from 'next/head'\r\nimport Article from '../../components/article'\r\nimport Layout from '../../components/Layout'\r\n\r\nconst Post = props =>{\r\n\r\n  return (\r\n    <Layout>\r\n    <Head>\r\n      <title>{props.post.fields.title}</title>\r\n      <meta name=\"title\" content={`${props.post.fields.title} | from Hindustan Daily`} />\r\n      <meta name=\"keywords\" content={`${props.post.fields.title}, by Hindustan Daily`} />\r\n      <meta name=\"description\" content={`Article on ${props.post.fields.title} | by Hindustan Daily`} />\r\n      <meta property=\"og:url\"           content={`https://hindustandaily.com/news/${props.post.fields.urlPath}`} />\r\n      <meta property=\"og:type\"          content=\"website\" />\r\n      <meta property=\"og:title\"         content={props.post.fields.title} />\r\n      <meta property=\"og:description\"   content=\"read on Hindustan Daily\" />\r\n      <meta property=\"og:image\"         content={props.post.fields.image.fields.file.url} />\r\n    </Head>\r\n    <div className=\"container mt-5\">\r\n      <Article\r\n        date={props.post.fields.date}\r\n        image={props.post.fields.image.fields}\r\n        title={props.post.fields.title}\r\n        url={props.post.fields.urlPath}\r\n        body={props.post.fields.body}\r\n      />\r\n    </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // Create an instance of the Contentful JavaScript SDK\r\n  const client = require(\"contentful\").createClient({\r\n    space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\r\n    accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\r\n  })\r\n\r\n  // Fetch all results where `fields.slug` is equal to the `slug` param\r\n  const result = await client\r\n    .getEntries({\r\n      content_type: \"post\",\r\n      \"fields.slug\": context.params.slug,\r\n    })\r\n    .then((response) => response.items)\r\n\r\n  // Since `slug` was set to be a unique field, we can be confident that\r\n  // the only result in the query is the correct post.\r\n  const post = result.pop()\r\n\r\n  // If nothing was found, return an empty object for props, or else there would\r\n  // be an error when Next tries to serialize an `undefined` value to JSON.\r\n  if (!post) {\r\n    return { props: {} }\r\n  }\r\n\r\n  // Return the post as props\r\n  return {\r\n    props: {\r\n      post,\r\n    },\r\n  }\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  // Create an instance of the Contentful JavaScript SDK\r\n  const client = require(\"contentful\").createClient({\r\n    space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\r\n    accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\r\n  })\r\n\r\n  // Query Contentful for all blog posts in the space\r\n  const posts = await client\r\n    .getEntries({ content_type: \"post\" })\r\n    .then((response) => response.items)\r\n\r\n  // Map the result of that query to a list of slugs.\r\n  // This will give Next the list of all blog post pages that need to be\r\n  // rendered at build time.\r\n  const paths = posts.map(({ fields: { slug } }) => ({ params: { slug } }))\r\n\r\n  return {\r\n    paths,\r\n    fallback: false,\r\n  }\r\n}\r\n\r\nexport default Post\r\n"]},"metadata":{},"sourceType":"module"}