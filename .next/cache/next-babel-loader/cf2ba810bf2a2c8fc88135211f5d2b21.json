{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Desktop\\\\hindustan-daily\\\\pages\\\\news\\\\index.js\";\nimport { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport Layout from '../../components/Layout';\nimport AdPost from '../../components/adpost';\nimport Headlines from '../../components/headlines';\n\nconst client = require('contentful').createClient({\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\n});\n\nfunction Newspage() {\n  async function fetchNews() {\n    const entries = await client.getEntries({\n      content_type: \"post\"\n    });\n    if (entries.items) return entries.items;\n    console.log(`Error getting Entries for ${contentType.name}.`);\n  }\n\n  async function fetchAds() {\n    const entries = await client.getEntries({\n      content_type: \"addPost\"\n    });\n    if (entries.items) return entries.items;\n    console.log(`Error getting Entries for ${contentType.name}.`);\n  }\n\n  const {\n    0: news,\n    1: setNews\n  } = useState([]);\n  const {\n    0: ads,\n    1: setAds\n  } = useState([]);\n  useEffect(() => {\n    async function getPosts() {\n      const news = await fetchNews();\n      setNews([...news]);\n      console.log(news);\n      const allAds = await fetchAds();\n      setAds([...allAds]);\n      console.log(allAds);\n    }\n\n    getPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-lg-8 mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: ads.length > 0 ? /*#__PURE__*/_jsxDEV(AdPost, {\n                image: ads[0].fields.adPost.fields,\n                link: ads[0].fields.link\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 11\n              }, this) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"bg-light\",\n                children: \"News\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 7\n              }, this), news.length > 0 ? news.map(p => /*#__PURE__*/_jsxDEV(Headlines, {\n                date: p.fields.date,\n                image: p.fields.image.fields,\n                title: p.fields.title,\n                slug: p.fields.slug\n              }, p.fields.title, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 13\n              }, this)) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\nexport default Newspage;","map":{"version":3,"sources":["C:/Users/HOME/Desktop/hindustan-daily/pages/news/index.js"],"names":["useEffect","useState","Head","Layout","AdPost","Headlines","client","require","createClient","space","process","env","NEXT_PUBLIC_CONTENTFUL_SPACE_ID","accessToken","NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN","Newspage","fetchNews","entries","getEntries","content_type","items","console","log","contentType","name","fetchAds","news","setNews","ads","setAds","getPosts","allAds","length","fields","adPost","link","map","p","date","image","title","slug"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBC,YAAtB,CAAmC;AAChDC,EAAAA,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAYC,+BAD6B;AAEhDC,EAAAA,WAAW,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAFuB,CAAnC,CAAf;;AAKA,SAASC,QAAT,GAAoB;AAClB,iBAAeC,SAAf,GAA2B;AACzB,UAAMC,OAAO,GAAG,MAAMX,MAAM,CAACY,UAAP,CAAkB;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAAlB,CAAtB;AACA,QAAIF,OAAO,CAACG,KAAZ,EAAmB,OAAOH,OAAO,CAACG,KAAf;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BC,WAAW,CAACC,IAAK,GAA1D;AACD;;AAED,iBAAeC,QAAf,GAA0B;AACxB,UAAMR,OAAO,GAAG,MAAMX,MAAM,CAACY,UAAP,CAAkB;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAAlB,CAAtB;AACA,QAAIF,OAAO,CAACG,KAAZ,EAAmB,OAAOH,OAAO,CAACG,KAAf;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BC,WAAW,CAACC,IAAK,GAA1D;AACD;;AAED,QAAM;AAAA,OAACE,IAAD;AAAA,OAAOC;AAAP,MAAkB1B,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAAC2B,GAAD;AAAA,OAAMC;AAAN,MAAgB5B,QAAQ,CAAC,EAAD,CAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAe8B,QAAf,GAA0B;AACxB,YAAMJ,IAAI,GAAG,MAAMV,SAAS,EAA5B;AACAW,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,CAAD,CAAP;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACA,YAAMK,MAAM,GAAG,MAAMN,QAAQ,EAA7B;AACAI,MAAAA,MAAM,CAAC,CAAC,GAAGE,MAAJ,CAAD,CAAN;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAYS,MAAZ;AACD;;AACDD,IAAAA,QAAQ;AACT,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACA;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACA;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA,oCACA;AAAA,wBACCF,GAAG,CAACI,MAAJ,GAAa,CAAb,gBACG,QAAC,MAAD;AACE,gBAAA,KAAK,EAAIJ,GAAG,CAAC,CAAD,CAAH,CAAOK,MAAP,CAAcC,MAAd,CAAqBD,MADhC;AAEE,gBAAA,IAAI,EAAIL,GAAG,CAAC,CAAD,CAAH,CAAOK,MAAP,CAAcE;AAFxB;AAAA;AAAA;AAAA;AAAA,sBADH,GAIQ;AALT;AAAA;AAAA;AAAA;AAAA,oBADA,eASA;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,sCACA;AAAI,gBAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,EAECT,IAAI,CAACM,MAAL,GAAc,CAAd,GACGN,IAAI,CAACU,GAAL,CAASC,CAAC,iBACR,QAAC,SAAD;AACE,gBAAA,IAAI,EAAEA,CAAC,CAACJ,MAAF,CAASK,IADjB;AAGE,gBAAA,KAAK,EAAED,CAAC,CAACJ,MAAF,CAASM,KAAT,CAAeN,MAHxB;AAIE,gBAAA,KAAK,EAAEI,CAAC,CAACJ,MAAF,CAASO,KAJlB;AAKE,gBAAA,IAAI,EAAEH,CAAC,CAACJ,MAAF,CAASQ;AALjB,iBAEOJ,CAAC,CAACJ,MAAF,CAASO,KAFhB;AAAA;AAAA;AAAA;AAAA,sBADF,CADH,GAUG,IAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBATA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkCD;;AAED,eAAezB,QAAf","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport Head from 'next/head'\r\nimport Layout from '../../components/Layout'\r\nimport AdPost from '../../components/adpost'\r\nimport Headlines from '../../components/headlines'\r\n\r\nconst client = require('contentful').createClient({\r\n  space: process.env.NEXT_PUBLIC_CONTENTFUL_SPACE_ID,\r\n  accessToken: process.env.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN\r\n})\r\n\r\nfunction Newspage() {\r\n  async function fetchNews() {\r\n    const entries = await client.getEntries({ content_type: \"post\" })\r\n    if (entries.items) return entries.items\r\n    console.log(`Error getting Entries for ${contentType.name}.`)\r\n  }\r\n\r\n  async function fetchAds() {\r\n    const entries = await client.getEntries({ content_type: \"addPost\" })\r\n    if (entries.items) return entries.items\r\n    console.log(`Error getting Entries for ${contentType.name}.`)\r\n  }\r\n\r\n  const [news, setNews] = useState([])\r\n  const [ads, setAds] = useState([])\r\n\r\n  useEffect(() => {\r\n    async function getPosts() {\r\n      const news = await fetchNews()\r\n      setNews([...news])\r\n      console.log(news);\r\n      const allAds = await fetchAds()\r\n      setAds([...allAds])\r\n      console.log(allAds);\r\n    }\r\n    getPosts()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n      <div className=\"container\">\r\n      <div className=\"row\">\r\n      <div className=\"col-md-6 col-lg-8 mt-3\">\r\n      <div>\r\n      {ads.length > 0\r\n        ? <AdPost\r\n            image = {ads[0].fields.adPost.fields}\r\n            link = {ads[0].fields.link}\r\n          /> : null\r\n      }\r\n      </div>\r\n      <div className=\"mt-3\">\r\n      <h5 className=\"bg-light\">News</h5>\r\n      {news.length > 0\r\n        ? news.map(p => (\r\n            <Headlines\r\n              date={p.fields.date}\r\n              key={p.fields.title}\r\n              image={p.fields.image.fields}\r\n              title={p.fields.title}\r\n              slug={p.fields.slug}\r\n            />\r\n          ))\r\n        : null}\r\n        </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        </Layout>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Newspage\r\n"]},"metadata":{},"sourceType":"module"}